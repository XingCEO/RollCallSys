{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1747570461366.6907\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useActionData, Form, useNavigate } from \"@remix-run/react\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  if (!username || !password) {\n    return json({\n      error: \"Username and password are required\"\n    }, {\n      status: 400\n    });\n  }\n\n  // \u9019\u88E1\u61C9\u8A72\u6709\u8207\u5F8C\u7AEFAPI\u6216\u8CC7\u6599\u5EAB\u4E92\u52D5\u7684\u908F\u8F2F\u4F86\u9A57\u8B49\u4F7F\u7528\u8005\u5E33\u865F\u548C\u5BC6\u78BC\n  // \u4F8B\u5982\uFF1A\u6AA2\u67E5username\u548Cpassword\u662F\u5426\u6B63\u78BA\uFF0C\u82E5\u6B63\u78BA\u5247\u8FD4\u56DE\u6210\u529F\u8A0A\u606F\u548C\u91CD\u5B9A\u5411\u8DEF\u5F91\n  // \u9019\u88E1\u50C5\u6A21\u64EC\u6210\u529F\u767B\u5165\n  return json({\n    success: true,\n    message: \"Login successful\",\n    username,\n    redirectTo: \"/student/dashboard\"\n  });\n};\nexport default function Login() {\n  _s();\n  const actionData = useActionData();\n  const navigate = useNavigate();\n  if (actionData?.success) {\n    // \u5982\u679C\u767B\u5165\u6210\u529F\uFF0C\u5C0E\u5411\u5230\u5C0D\u61C9\u7684\u9801\u9762\n    setTimeout(() => navigate(actionData.redirectTo), 2000);\n  }\n  return <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-6\">\u5E33\u865F\u5BC6\u78BC\u767B\u5165</h1>\n      {actionData?.success ? <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded max-w-md\">\n          <p>{actionData.message}</p>\n          <p>\u4F7F\u7528\u8005: {actionData.username}</p>\n          <p>\u5373\u5C07\u5C0E\u5411\u81F3\u60A8\u7684\u4E3B\u9801\u9762...</p>\n        </div> : <Form method=\"post\" className=\"bg-white p-6 rounded shadow-md w-full max-w-md\">\n          <div className=\"mb-4\">\n            <label htmlFor=\"username\" className=\"block text-gray-700 font-medium mb-2\">\n              \u4F7F\u7528\u8005\u540D\u7A31\n            </label>\n            <input type=\"text\" id=\"username\" name=\"username\" required className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"\u8F38\u5165\u60A8\u7684\u4F7F\u7528\u8005\u540D\u7A31\" />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"password\" className=\"block text-gray-700 font-medium mb-2\">\n              \u5BC6\u78BC\n            </label>\n            <input type=\"password\" id=\"password\" name=\"password\" required className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"\u8F38\u5165\u60A8\u7684\u5BC6\u78BC\" />\n          </div>\n          {actionData?.error && <p className=\"text-red-500 text-sm mb-4\">{actionData.error}</p>}\n          <button type=\"submit\" className=\"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\">\n            \u767B\u5165\n          </button>\n        </Form>}\n    </div>;\n}\n_s(Login, \"YNDRs+jqEyo50IzazjHr5ocC9v8=\", false, function () {\n  return [useActionData, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAmCf;AAvDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AA6Be,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,WAAW,YAAY;AAC7B,MAAI,YAAY,SAAS;AAEvB,eAAW,MAAM,SAAS,WAAW,UAAU,GAAG,GAAI;AAAA,EACxD;AACA,SAAO,mDAAC,SAAI,WAAU,kEAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,oDAAxC;AAAA;AAAA;AAAA;AAAA,WAA8C;AAAA,IAC7C,YAAY,UAAU,mDAAC,SAAI,WAAU,kFAClC;AAAA,yDAAC,OAAG,qBAAW,WAAf;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,mDAAC,OAAE;AAAA;AAAA,QAAM,WAAW;AAAA,WAApB;AAAA;AAAA;AAAA;AAAA,aAA6B;AAAA,MAC7B,mDAAC,OAAE,+EAAH;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,SAHG;AAAA;AAAA;AAAA;AAAA,WAIrB,IAAS,mDAAC,QAAK,QAAO,QAAO,WAAU,kDACrC;AAAA,yDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,WAAM,SAAQ,YAAW,WAAU,wCAAuC,8CAA3E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,QAAO,IAAG,YAAW,MAAK,YAAW,UAAQ,MAAC,WAAU,6CAA4C,aAAY,4DAA5H;AAAA;AAAA;AAAA;AAAA,eAAwI;AAAA,WAJ1I;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,WAAM,SAAQ,YAAW,WAAU,wCAAuC,4BAA3E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,YAAW,IAAG,YAAW,MAAK,YAAW,UAAQ,MAAC,WAAU,6CAA4C,aAAY,0CAAhI;AAAA;AAAA;AAAA;AAAA,eAAyI;AAAA,WAJ3I;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACC,YAAY,SAAS,mDAAC,OAAE,WAAU,6BAA6B,qBAAW,SAArD;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MACjF,mDAAC,YAAO,MAAK,UAAS,WAAU,+DAA8D,4BAA9F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAhBO;AAAA;AAAA;AAAA;AAAA,WAiBT;AAAA,OAvBC;AAAA;AAAA;AAAA;AAAA,SAwBL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
