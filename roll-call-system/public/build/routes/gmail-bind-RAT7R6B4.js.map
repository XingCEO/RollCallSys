{
  "version": 3,
  "sources": ["../../../app/routes/gmail-bind.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/gmail-bind.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/gmail-bind.tsx\");\n  import.meta.hot.lastModified = \"1747570129582.485\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useActionData, Form } from \"@remix-run/react\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  if (!email) {\n    return json({\n      error: \"Email is required\"\n    }, {\n      status: 400\n    });\n  }\n\n  // \u9019\u88E1\u61C9\u8A72\u6709\u8207\u5F8C\u7AEFAPI\u6216\u8CC7\u6599\u5EAB\u4E92\u52D5\u7684\u908F\u8F2F\u4F86\u8655\u7406Gmail\u7D81\u5B9A\n  // \u4F8B\u5982\uFF1A\u6AA2\u67E5email\u662F\u5426\u5DF2\u5B58\u5728\uFF0C\u82E5\u4E0D\u5B58\u5728\u5247\u5275\u5EFA\u65B0\u7D81\u5B9A\u8A18\u9304\n  // \u9019\u88E1\u50C5\u6A21\u64EC\u6210\u529F\u7D81\u5B9A\n  return json({\n    success: true,\n    message: \"Gmail binding successful\",\n    email\n  });\n};\nexport default function GmailBind() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <h1 className=\"text-3xl font-bold mb-6\">Gmail \u7D81\u5B9A\u8A8D\u8B49</h1>\n      {actionData?.success ? <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded max-w-md\">\n          <p>{actionData.message}</p>\n          <p>\u7D81\u5B9AEmail: {actionData.email}</p>\n          <a href=\"/\" className=\"text-blue-500 hover:underline mt-2 block\">\u8FD4\u56DE\u9996\u9801</a>\n        </div> : <Form method=\"post\" className=\"bg-white p-6 rounded shadow-md w-full max-w-md\">\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-gray-700 font-medium mb-2\">\n              Gmail \u5730\u5740\n            </label>\n            <input type=\"email\" id=\"email\" name=\"email\" required className=\"w-full p-2 border border-gray-300 rounded\" placeholder=\"\u8F38\u5165\u60A8\u7684Gmail\u5730\u5740\" />\n          </div>\n          {actionData?.error && <p className=\"text-red-500 text-sm mb-4\">{actionData.error}</p>}\n          <button type=\"submit\" className=\"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\">\n            \u7D81\u5B9AGmail\n          </button>\n        </Form>}\n    </div>;\n}\n_s(GmailBind, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = GmailBind;\nvar _c;\n$RefreshReg$(_c, \"GmailBind\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AA4Bf;AAhDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AA2Be,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,WAAU,kEAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,8CAAxC;AAAA;AAAA;AAAA;AAAA,WAAkD;AAAA,IACjD,YAAY,UAAU,mDAAC,SAAI,WAAU,kFAClC;AAAA,yDAAC,OAAG,qBAAW,WAAf;AAAA;AAAA;AAAA;AAAA,aAAuB;AAAA,MACvB,mDAAC,OAAE;AAAA;AAAA,QAAU,WAAW;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA,aAA8B;AAAA,MAC9B,mDAAC,OAAE,MAAK,KAAI,WAAU,4CAA2C,wCAAjE;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,SAHlD;AAAA;AAAA;AAAA;AAAA,WAIrB,IAAS,mDAAC,QAAK,QAAO,QAAO,WAAU,kDACrC;AAAA,yDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,WAAM,SAAQ,SAAQ,WAAU,wCAAuC,kCAAxE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,WAAM,MAAK,SAAQ,IAAG,SAAQ,MAAK,SAAQ,UAAQ,MAAC,WAAU,6CAA4C,aAAY,+CAAvH;AAAA;AAAA;AAAA;AAAA,eAAqI;AAAA,WAJvI;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACC,YAAY,SAAS,mDAAC,OAAE,WAAU,6BAA6B,qBAAW,SAArD;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MACjF,mDAAC,YAAO,MAAK,UAAS,WAAU,+DAA8D,iCAA9F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAVO;AAAA;AAAA;AAAA;AAAA,WAWT;AAAA,OAjBC;AAAA;AAAA;AAAA;AAAA,SAkBL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
